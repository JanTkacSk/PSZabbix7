New-ZXTokenSession

Example 1: Start new session and save the url/token pair
New-ZXTokenSession -Save

Example 2: Start new session and save the url/token pair
You will be prompted to fill in the password. The token will be encrypted and saved in your profile folder.
New-ZXTokenSession -Url https://YourZabbixAPIURL -Save

Example 3: Start new session using on of the the saved url/token pairs
New-ZXTokenSession -Load

[0] https://zabbix-prod.local/api_jsonrpc.php
[1] https://zabbix-test.local/api_jsonrpc.php
Select the number and press enter: 0

userid         : 146
username       : john.doe@local
name           : Jan
surname        : Tkac
url            : 
autologin      : 1
autologout     : 0
lang           : en_US
refresh        : 30s
theme          : dark-theme
attempt_failed : 0
attempt_ip     : 
attempt_clock  : 0
rows_per_page  : 500
timezone       : Europe/Berlin
roleid         : 3
type           : 3
userip         : 195.168.0.4
debug_mode     : 0
gui_access     : 0


Example 3: Start new session by entering the exact url
This command can be added to PowerShell profile and loaded automatically at PowerShell start.
New-ZXTokenSession -Url https://zabbix-prod.local/api_jsonrpc.php -Load


Example 1: Search for a single host based on an exact Name match. 
Return only those results that exactly match the given host name(s). There is no result for “zx_test_host_50” because it does not exist. In Zabbix API, host “name” is called “host” and “visible name” is called “name”. In PowerShell module “name” is “Name” and  the “visible name” is “Alias”
Get-ZXHost -Name zx_test_host_1,zx_test_host_2,zx_test_host_50

hostid       : 492558
host         : zx_test_host_1
name         : zx_alias_1 
status       : 1
proxy_hostid : 36710

hostid       : 494040
host         : zx_test_host_2
name         : zx_alias_2
status       : 1
proxy_hostid : 36710

Example 2: Search for hosts based on a Name pattern.
Return results that match the given pattern (case-insensitive). Accepts a host name to search for. If no additional options are given, this will perform a LIKE "%…%" search. 
Get-ZXHost -NameSearch zx_test

hostid       : 492558
host         : zx_test_host_1
name         : zx_alias_1
status       : 1
proxy_hostid : 36710

hostid       : 494040
host         : zx_test_host_2
name         : zx_alias_2
status       : 1
proxy_hostid : 36710


Example 3:  Fetch hosts and interfaces
Get-ZXHost -NameSearch test -IncludeInterfaces -Output host | Select-Object hostid,host,@{n="IPs";e={$_.interfaces.ip}}

hostid host                                                IPs
------ ----                                                ----------
476172 vm-win-test-1.test.local                            
481649 vm-win-test-2.test.local                            10.61.185.9 
28948  vm-win-test-3.test.local                            10.30.0.71
491371 vm-win-test-4.test.local                            
25244  vm-win-test-5.test.local                            {192.168.160.28,192.168.160.28}

Get-ZXHost -NameSearch test -IncludeInterfaces -Output host

hostid host                                                interfaces
------ ----                                                ----------
476172 vm-win-test-1.test.local                            {}
481649 vm-win-test-2.test.local                            {@{ip=10.61.185.9; port=161}} 
28948  vm-win-test-3.test.local                            {@{ip=10.30.0.71; port=10050}}
491371 vm-win-test-4.test.local                            {@{ip=; port=10050}}
25244  vm-win-test-5.test.local                            {@{ip=192.168.160.28; port=10050}, @{ip=192.168.160.28; port=9005}}

Example 4:  Search for hosts based on an Alias pattern. 
Return results that match the given pattern (case-insensitive). Accepts a host name to search for. If no additional options are given, this will perform a LIKE "%…%" search.
Get-ZXHost -AliasSearch some-alias

Example 5:  Fetch host “items”.
By using -IncludeItems you will get a basic set of properties for each item. 
Get-ZXHost -NameSearch vm-win -IncludeItems

hostid       : 499271
host         : vm-win-test-1
name         : vm-win-test-1
status       : 0
proxy_hostid : 0
items        : {@{itemid=53119623; name=C:: Access; type=0; delay=3m; master_itemid=0; lastvalue=0}, @{itemid=53119533;
               name=caCertificate; type=0; delay=1h; master_itemid=0; lastvalue=}, @{itemid=53119534; name=caPendingUpdates;
               type=7; delay=4h; master_itemid=0; lastvalue=}, @{itemid=53119625; name=C:: Free space; type=7; delay=3m;
               master_itemid=0; lastvalue=0}…}

Example 6:  Fetch host “items”, fetch only name and type of each item.
Get-ZXHost -NameSearch vm-win -IncludeItems -ItemProperties name,type -Output host

hostid host                           items
------ ----                           -----
473312 test-webserver-123456789.local {@{name=Zabbix agent running - Host name; type=0}, @{name=Zabbix agent running - Status; type=7}, @{name=Zabbix agent running - Version; type=7}, @{name=Disk IO sum (a…

Example 7:  Fetch host  “items” with all properties.
Get-ZXHost -NameSearch vm-win -IncludeItems -ItemProperties extend

Example 8:  Fetch host triggers.
Get-ZXHost -Name test -IncludeTriggers -TriggerProperties description | Select-Object -ExpandProperty triggers

triggerid description
--------- -----------
5718296   System not reachable by ICMP
5718297   Zabbix agent not available (or nodata for {$AGENT.NODATA_TIMEOUT})
5718298   High swap space usage (less than {$SWAP.PFREE.MIN.CRIT}% free)
5718299   High swap space usage (less than {$SWAP.PFREE.MIN.WARN}% free)
5718300   High memory utilization ( >{$MEMORY.UTIL.CRIT}% for 5m)
5718301   Load average too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 60m)
5718302   High CPU utilization (over {$CPU.UTIL.CRIT}% for 30m)
5718309   Zombie processes (over {$PROCS.ZOMBIES.WARN} for 60m)
5718310   Zombie processes (over {$PROCS.ZOMBIES.CRIT} for 120m)
5718311   SCSI Device Timeout < 180 seconds
5718312   NTP Time Offset +- 150 seconds


Get-ZXMaintenance
Example 1:  Get maintenance mode information
Maintenanceid can be used to search the auditlog.
$HostID = Get-ZXHost -Name vm-win-test-1.test.local -Output hostid
Get-ZXMaintenance -HostId $HostID.hostid

maintenanceid    	: 1280564
name             	: vm-win-test-1.test.local                            
maintenance_type 	: 0
description     	: “SomeText”
active_since    	: 1737010800
active_till      	: 1768604400
tags_evaltype   	: 0
CreationTime     	:

New-ZXTagFilter
Example 1:  Create a list of tags with operators and use it to find hosts that match all the conditions.
Using Get-Host with -WhatIf parameter to show what the json request looks like without actually making the API call.
$TagFilter = New-ZXTagFilter
$TagFilter.AddTag("#tag_1","exists").AddTag("#tag_2","notexists").AddTag("tag_3","equals","value")
Get-ZXHost -Tag $TagFilter.Tags -WhatIf

JSON REQUEST
{
  "jsonrpc": "2.0",
  "method": "host.get",
  "params": {
    "output": [
      "hostid",
      "host",
      "name",
      "status",
      "proxy_hostid"
    ],
    "tags": [
      {
        "tag": "#tag_1",
        "operator": "4",
        "value": ""
      },
      {
        "tag": "#tag_2",
        "operator": "5",
        "value": ""
      },
      {
        "tag": "tag_3",
        "operator": "1",
        "value": "value"
      }
    ]
  },
  "auth": "*****",
  "id": "1"
}
Get-ZXTrigger
Example 1:  Get a list of all triggers on a single host wit all trigger properties
Use “extend” to get all trigger properties.
If you want to export the data co .csv and paste it to Excel, do not use Format-Table, Use ConvertTo-CSV
$ZXHost = Get-ZXHost -Name Test-Host -Output host,id
Get-ZXTrigger -HostID $ZXHost.hostid -Output extend | Format-Table

triggerid expression                                                               description                                                           url status value priority lastchange comments
--------- ----------                                                               -----------                                                           --- ------ ----- -------- ---------- --------   
9618884   {22087821}>{$ICMP_LOSS_WARN} and {22087821}<100                          High ICMP ping loss                                                       0      0     3        0
9618885   {22087822}>{$ICMP_RESPONSE_TIME_WARN}                                    High ICMP ping response time                                              0      0     3        0
9618886   {22087823}=0…                                                            Unavailable by ICMP ping                                                  0      0     3        0          The last … 
9618887   {22087825}=0…                                                            Unavailable by ICMP ping Critical                                         0      0     5        0          The last … 
9618888   {22087827}=0…                                                            Unavailable by ICMP ping High                                             0      0     4        0          The last … 
9618889   {22087829}=0                                                             The host is not available by SNMP                                         0      0     3        1737720758 No SNMP d… 
9618890   {22087830}<10m                                                           Device has been restarted or reinitialized                                0      0     2        0          The recor… 
9618891   {22087831}>{$CPU.UTIL.CRIT}                                              High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)                      0      0     2        0          CPU utili… 
10001260  {22748086}<>5                                                            Fan number 1 is in critical state. Current state is {ITEM.LASTVALUE1}     0      0     3        0          Please ch… 
10001261  {22748087}<>5                                                            Fan number 2 is in critical state. Current state is {ITEM.LASTVALUE1}     0      0     3        0          Please ch…

Example 2:  Get a list of triggers on a single host with only specific trigger properties

$ZXHost = Get-ZXHost -Name Test-Host -Output host,id
Get-ZXTrigger -HostID $ZXHost.hostid -Output description,value,expression

triggerid description                                                           expression
--------- -----------                                                           ----------
9618884   High ICMP ping loss                                                   {22087821}>{$ICMP_LOSS_WARN} and {22087821}<100
9618885   High ICMP ping response time                                          {22087822}>{$ICMP_RESPONSE_TIME_WARN}
9618886   Unavailable by ICMP ping                                              {22087823}=0…
9618887   Unavailable by ICMP ping Critical                                     {22087825}=0…
9618888   Unavailable by ICMP ping High                                         {22087827}=0…
9618889   The host is not available by SNMP                                     {22087829}=0
9618890   Device has been restarted or reinitialized                            {22087830}<10m
9618891   High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)                  {22087831}>{$CPU.UTIL.CRIT}
10001260  Fan number 1 is in critical state. Current state is {ITEM.LASTVALUE1} {22748086}<>5
10001261  Fan number 2 is in critical state. Current state is {ITEM.LASTVALUE1} {22748087}<>5
10001262  Fan number 3 is in critical state. Current state is {ITEM.LASTVALUE1} {22748088}<>5
10001263  PSU number 1 is in critical state. Current state is {ITEM.LASTVALUE1} {22748089}=4…
10001264  Memory utilization is ( >{$MEMORY.UTIL.MAX}% for 5m)                  {22748090}>={$MEMORY.UTIL.MAX}
10001265  Memory utilization is ( >{$MEMORY.UTIL.WARN}% for 5m)                 {22748091}>={$MEMORY.UTIL.WARN}

Example 3:  Get a list of trigger properties
#Get any host with at least one trigger
$ZXHost = Get-ZXHost -Name Test-Host -Output name,id
#Get the list of all possible properties
Get-ZXTrigger -HostID $ZXHost.hostid -Output Extend | Select-Object -First 1 | Get-Member -MemberType NoteProperty | Select-Object Name

Name
----
comments        
correlation_mode
correlation_tag 
description     
error
event_name      
expression      
flags
lastchange      
manual_close
opdata
priority
recovery_expression
recovery_mode
state
status
templateid
triggerid
type
url
url_name
uuid
value

Get-ZXAction
$Alert = Get-ZXAlert -EventID 0123456789
Get-ZXAction -ActionID $alert.actionid -Output name

actionid name
-------- ----
123      Alert issues to HelpDesk (critical) (Default)

Common Parameters
Output
Example 1:  Select specific properties of an object
If you don’t use this parameter, only a few selected properties are fetched depending on the object type, those are hardcoded. 
You have an option to use -Extend to show all properties or select a specific properties as in this case.
Get-ZXHost -NameSearch test -IncludeTriggers -IncludeInterfaces -InterfaceProperties ip -Output name,status
hostid status host
------ ------ ----
481427 1      Test_host1
500178 0      Test_host2
494848 0      Test_host3
481779 0      Test_host4
506002 0      Test_host5

Get-ZXHost -NameSearch test -IncludeTriggers -IncludeInterfaces -InterfaceProperties ip -Output extend

WhatIf
Example 1:  Shows a JSON request without actually making the API call
Get-ZXHost -NameSearch test -IncludeTriggers -IncludeInterfaces -InterfaceProperties ip -Output name,status -WhatIf

JSON REQUEST
{
  "jsonrpc": "2.0",
  "method": "host.get",
  "params": {
    "output": [
      "name",
      "status"
    ],
    "search": {
      "host": "test"
    },
    "selectInterfaces": [
      "ip"
    ],
    "selectTriggers": [
      "name",
      "value"
    ]
  },
  "auth": "*****",
  "id": "1"
}

CountOutput
Example 1:  Don’t fetch any data, just show count the output.
Get-ZXHost -Status Disabled -CountOutput

3724

Limit
Example 1:  Limit the number of returned result
Good especially for getting samples to avoid fetching too much data
Get-ZXHost -NameSearch test -Limit 5 -ShowJsonRequest

JSON REQUEST
{
  "jsonrpc": "2.0",
  "method": "host.get",
  "params": {
    "output": [
      "host"
    ],
    "search": {
      "host": "test"
    },
    "limit": 5
  },
  "auth": "*****",
  "id": "1"
}

hostid host
------ ----
494848 Test_host1
481779 Test_host2
506002 Test_host3
500178 Test_host4
481427 Test_host3
